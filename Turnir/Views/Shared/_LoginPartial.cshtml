@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ITrenerService Treners

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userId = User.Id();
        var userIsTrener = Treners.IsTrener(userId);

        @if (userIsTrener)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Teams" asp-action="Mine">My Team</a>
            </li> 
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Treners" asp-action="Become">Become Trener</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
     }
     else
     {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
     }
</ul>
